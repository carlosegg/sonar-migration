#--------------------------------------------------------
# To use an environment variable, use the following syntax :  ${env:NAME_OF_ENV_VARIABLE}
# For example :
#   sonar.jdbc.url: ${env:SONAR_JDBC_URL}
#---------------------------------------------------------


#---------------------------------------------------------
# WEB
#---------------------------------------------------------
# Listen host/port and context path (for example / or /sonar). Default values are 0.0.0.0:9000/ 
# ONLY IF STANDALONE MODE. NOT USED IF DEPLOYED AS A WAR.
#sonar.web.host:                           0.0.0.0
#sonar.web.port:                           9000
#sonar.web.context:                        /

# Apache mod_jk connector. Supported only in standalone mode. 
# Uncomment to activate AJP13 connector. 
#sonar.ajp13.port: 8009

#---------------------------------------------------------
# DATABASE
#---------------------------------------------------------

# Comment the 4 following lines to deactivate the default embedded database (used only for tests and demos)
#sonar.jdbc.url:                            jdbc:derby://localhost:1527/sonar;create=true
#sonar.jdbc.driverClassName:                org.apache.derby.jdbc.ClientDriver
#sonar.jdbc.validationQuery:                values(1)
# data directory, autodetected : /data if standalone application, /WEB-INF/classes/data if WAR deployement (exploded mode)
#sonar.embeddedDatabase.dataDir:

# MySql
# uncomment the 3 following lines to use MySQL
sonar.jdbc.url:                            jdbc:mysql://localhost:3306/sonar?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true
sonar.jdbc.driverClassName:                com.mysql.jdbc.Driver
sonar.jdbc.validationQuery:                select 1

# Oracle
# uncomment the 3 following lines to use Oracle
#sonar.jdbc.url:                            jdbc:oracle:thin:@localhost/XE
#sonar.jdbc.driverClassName:                oracle.jdbc.driver.OracleDriver
#sonar.jdbc.validationQuery:                select 1 from dual

# PostgreSQL
# uncomment the 3 following lines to use PostgreSQL
#sonar.jdbc.url:                            jdbc:postgresql://localhost/sonar
#sonar.jdbc.driverClassName:                org.postgresql.Driver
#sonar.jdbc.validationQuery:                select 1

# generic settings
sonar.jdbc.username:                       sonar
sonar.jdbc.password:                       admin
sonar.jdbc.maxActive:                      10
sonar.jdbc.maxIdle:                        5
sonar.jdbc.minIdle:                        2
sonar.jdbc.maxWait:                        5000
sonar.jdbc.minEvictableIdleTimeMillis:     600000
sonar.jdbc.timeBetweenEvictionRunsMillis:  30000


# Transaction isolation level. Default driver setting is used by default.
# Values : 1 (TRANSACTION_READ_UNCOMMITED), 2 (TRANSACTION_READ_COMMITTED), 4 (TRANSACTION_REPEATABLE_READ), 8 (TRANSACTION_SERIALIZABLE)
#sonar.jdbc.defaultTransactionIsolation: 2


# When packaged in a WAR, JDBC datasource can be configured into the application server then registered to JNDI.
# In such a case Sonar uses this datasource to connect to database, else if binds itself its own datasource.
# Note : Jonas does not accept to bind subcontexts, so name should be something like 'jdbc-sonar', without slashes.
#sonar.jdbc.jndiName:                       jdbc/sonar


#---------------------------------------------------------
# EXTENSIONS
#---------------------------------------------------------
# Absolute path of coding rules extensions (custom rules that are not provided with tools like Checkstyle or PMD).
# This parameter is useful when Sonar is deployed as a WAR. It avoids from packaging the WAR file each time extensions JARs are updated.
# The directory contains subdirectories like checkstyle/ and pmd/
# Example :
# sonar.rules.extensionsPath:  /user/home/jdoe/sonar/extensions 
#-------------------
# Sonar LDAP Plugin
#-------------------

# IMPORTANT : before activation, make sure that one Sonar administrator is defined in the external system
# Activates the plugin. Leave blank or comment out to use default sonar authentication.
#sonar.authenticator.class: org.sonar.plugins.ldap.LdapAuthenticator
sonar.authenticator.class: org.sonar.plugins.ldap.LdapAuthenticator
# Ignore failure at startup if the connection to external system is refused.
# Users can browse sonar but not log in as long as the connection fails.
# When set to true, Sonar will not start if connection to external system fails.
# Default is false.
#sonar.authenticator.ignoreStartupFailure: true

# (omit if you use autodiscovery) URL of the LDAP server.
# If you are using ldaps, then you should install server certificate into java truststore.
# eg. ldap://localhost:10389
# ldap.url: ldap://localhost:10389
ldap.url: ldap://replicahi.hi.inet:389

# (optional) Distinguished Name (DN) of the root node in LDAP from which to search for users,
# eg. "ou=users,o=mycompany"
#ldap.baseDn: ou=users,o=mycompany
ldap.baseDn: o=tid

#user ldap 
sonar.ldap.user: joseld

# (optional) Bind DN is the username of an LDAP user to connect (or bind) with.
# This is a Distinguished Name of a user who has administrative rights,
# eg. "cn=sonar,ou=users,o=mycompany". Leave blank for anonymous access to the LDAP directory.
#ldap.bindDn:

# (optional) Bind Password is the password of the user to connect with.
# Leave blank for anonymous access to the LDAP directory.
#ldap.bindPassword:

# Login Attribute is the attribute in LDAP holding the user's login.
# Default is 'uid'. Set 'sAMAccountName' for Microsoft Active Directory
#ldap.loginAttribute: sAMAccountName

# Object class of LDAP users.
# Default is 'inetOrgPerson'. Set 'user' for Microsoft Active Directory.
#ldap.userObjectClass: user

# (advanced option) See http://java.sun.com/products/jndi/tutorial/ldap/security/auth.html
# Default is 'simple'. Possible values: 'simple', 'CRAM-MD5', 'DIGEST-MD5', 'GSSAPI'.
#ldap.authentication: DIGEST-MD5

# (advanced option)
# See
# http://java.sun.com/products/jndi/tutorial/ldap/security/digest.html
# http://java.sun.com/products/jndi/tutorial/ldap/security/crammd5.html
# eg. example.org
#ldap.realm:

# (advanced option) Context factory class.
# Default is 'com.sun.jndi.ldap.LdapCtxFactory'.
#ldap.contextFactoryClass: com.sun.jndi.ldap.LdapCtxFactory

